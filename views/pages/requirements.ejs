<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/head'); %>
</head>
<body class="container">

<header>
    <%- include('../partials/auth_header'); %>
</header>

<main>
<div class="row">
  <div class="col-sm-12">
    <div class="jumbotron d-flex flex-column align-items-center">
      <h1 class="mb-3">Requisitos Já Cadastrados (MES)</h1>
      <% if(requisitos.length){ %>
        <table class="table table-dark rounded" style="overflow: hidden">
          <thead>
            <tr>
              <th scope="col" class="border-0">Requisito</th>
              <th scope="col" class="border-0">Caso de Uso</th>
              <th scope="col" class="border-0">Tipo</th>
              <th scope="col" class="border-0">Entidade</th>
              <th scope="col" class="border-0">Atributos</th>
              <th scope="col" class="border-0">Condições</th>
              <th scope="col" class="border-0">CRUD</th>
              <th scope="col" class="border-0">Get/Set</th>
              <th scope="col" class="border-0">SQL</th>
              <th scope="col" class="border-0">Ações</th>
            </tr>
          </thead>
          <tbody>
            <% requisitos.forEach((requisito) => { %>
              <tr>
                <td><%= requisito.identificador %></td>
                <td><%= requisito.casoDeUso %></td>
                <td><%= requisito.tipo %></td>
                <td><%= requisito.entidade %></td>
                <td><%= requisito.atributos %></td>
                <td><%= requisito.condicoes %></td>
                <td><%= requisito.crud %></td>
                <td><%= requisito.getSet %></td>
                <td><%= requisito.sql %></td>
                <td>
                  <a href="/requirements/<%= id_projeto %>/edit/<%= requisito.id_requisito_usuario %>">
                    <i class="fa-solid fa-pen-to-square"></i>
                  </a>
                  <a href="/requirements/<%= id_projeto %>/delete/<%= requisito.id_requisito_usuario %>">
                    <i class="fa-solid fa-trash"></i>
                  </a>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
        <h2 class="mt-5 mb-5">Casos de Uso</h2>
        <div id="casosDeUso" style="background-color: whitesmoke; border: solid 1px black; width: 100%; height: 400px"></div>
      <% } else { %>  
        <p>Ainda não foi cadastrado nenhum requisito para o seu projeto, crie <a href="/requirements/<%= id_projeto %>/create">aqui</a>!</p>
      <% } %>
    </div>
  </div>
</div>
</main>

<footer>
  <%- include('../partials/footer'); %>
</footer>

<script src="https://unpkg.com/gojs/release/go-debug.js"></script>
<script>
  var $ = go.GraphObject.make;
  const requisitos = <%- JSON.stringify(requisitos) %>;

  const casosDeUso = requisitos.map(requisito => {
    return {
      id: requisito.identificador,
      conteudo: requisito.casoDeUso,
    }
  });

  casosDeUso.unshift({
    id: "ator",
    conteudo: "ator"
  })

  const relacoes = [];

  for (let i=0; i<requisitos.length; i++) {
    if (requisitos[i].condicoes === "*") {
      continue;
    }

    const condicoes = requisitos[i].condicoes
      .split(/(include|extend|generalization)/gi).slice(1).join(":::::")
      .replace(/\(|\)|\*/gi, "")
      .split("\n")
      .filter(item => item && item !== "");

    for (let condicao of condicoes) {
      const [ tipo, identificador ] = condicao.split(":::::")
      relacoes.push({from: requisitos[i].identificador, to: identificador, text: tipo});
    }
  }

  for (let i=0; i<requisitos.length; i++) {
    const requisito = requisitos[i];

    if (relacoes.findIndex(relacao => relacao.to === requisito.identificador) === -1) {
      relacoes.push({ from: "ator", to: requisito.identificador, text: "" })
    }
  }

  const diagram = $(go.Diagram, "casosDeUso", {
    layout: $(go.LayeredDigraphLayout, { 
      columnSpacing: 50,
      layerSpacing: 100,
      layeringOption: go.LayeredDigraphLayout.LayerLongestPathSource
    })
  });

  diagram.nodeTemplate =
      $(go.Node, "Spot",
        { locationObjectName: "ICON", locationSpot: go.Spot.Center },
        new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),
        { selectionObjectName: "ICON" },
        $(go.Shape, "RoundedRectangle",
          {
            name: "ICON",
            parameter1: 10,
            desiredSize: new go.Size(120, 70),
            fill: "#4bb",
            stroke: "black",
            portId: "",
            cursor: "pointer"
          }),
        $(go.Shape,
          { fill: "transparent", stroke: null, desiredSize: new go.Size(30, 30) }),
        $(go.TextBlock,
          {
            font: "bold 11pt helvetica, bold arial, sans-serif",
            editable: true,
            _isNodeLabel: true,
            cursor: "move"
          },
          new go.Binding("text", "conteudo").makeTwoWay(),
          new go.Binding("alignment", "alignment", go.Spot.parse).makeTwoWay(go.Spot.stringify)
        )
      );

    diagram.linkTemplate =
      $(go.Link,
        { curve: go.Link.Bezier, adjusting: go.Link.Stretch, reshapable: true },
        new go.Binding("points").makeTwoWay(),
        new go.Binding("curviness", "curviness"),
        $(go.Shape,
          { strokeWidth: 1.5 }),
        $(go.Shape,
          { toArrow: "standard", stroke: null }),
        $(go.Panel, "Auto",
          $(go.Shape,
            {
              fill: $(go.Brush, "Radial",
                { 0: "rgb(240, 240, 240)", 0.3: "rgb(240, 240, 240)", 1: "rgba(240, 240, 240, 0)" }),
              stroke: null
            }),
          $(go.TextBlock, "transition",
            {
              textAlign: "center",
              font: "10pt helvetica, arial, sans-serif",
              stroke: "black",
              margin: 4,
              editable: true
            },
            new go.Binding("text", "text").makeTwoWay())
        )
      );

  diagram.model = go.Model.fromJson({
    "class": "go.GraphLinksModel",
    "nodeKeyProperty": "id",
    "nodeDataArray": casosDeUso,
    "linkDataArray": relacoes
  });
</script>

</body>
</html>